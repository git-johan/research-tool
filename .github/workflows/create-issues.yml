name: Auto-Create Issues for New Specs

on:
  push:
    branches: [main, master, develop, feature/*]
    paths: ['specs/features/**/*.md']

jobs:
  create-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get new spec files
        id: new-files
        run: |
          # Get files that were added (not modified)
          new_files=$(git diff --name-status ${{ github.event.before }}..${{ github.event.after }} -- 'specs/features/**/*.md' | grep '^A' | cut -f2 | tr '\n' ' ')
          echo "files=$new_files" >> $GITHUB_OUTPUT
          echo "New spec files: $new_files"

      - name: Create GitHub issues for new specs
        if: steps.new-files.outputs.files != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in ${{ steps.new-files.outputs.files }}; do
            if [ -f "$file" ]; then
              echo "Processing new spec: $file"

              # Check if this spec already has an issue number
              existing_issue=$(grep -E '^\*\*GitHub Issue:\*\*' "$file" | sed -E 's/.*#([0-9]+).*/\1/' || echo "")

              if [ -z "$existing_issue" ] || [ "$existing_issue" = "0" ]; then
                # Extract title from spec
                title=$(grep "^# " "$file" | head -1 | sed 's/^# //')

                if [ -n "$title" ]; then
                  echo "Creating issue for: $title"

                  # Create the issue
                  issue_url=$(gh issue create \
                    --title "Feature: $title" \
                    --body-file "$file" \
                    --label "enhancement,spec,auto-created" \
                    2>/dev/null || echo "")

                  if [ -n "$issue_url" ]; then
                    # Extract issue number from URL
                    issue_number=$(echo "$issue_url" | grep -o '[0-9]*$')
                    echo "‚úÖ Created issue #$issue_number: $issue_url"

                    # Update the spec file with the issue number
                    sed -i 's/\*\*Epic:\*\* \(.*\)/\*\*Epic:\*\* \1\n\*\*GitHub Issue:\*\* #'$issue_number'/' "$file"

                    # Commit the updated spec file
                    git config --local user.email "action@github.com"
                    git config --local user.name "GitHub Action"
                    git add "$file"
                    git commit -m "auto: add GitHub issue #$issue_number to $file

ü§ñ Auto-generated by GitHub Actions" || echo "No changes to commit"

                    # Add comment to the issue
                    gh issue comment "$issue_number" \
                      --body "ü§ñ This issue was automatically created from the spec file \`$file\`

The spec file has been updated to reference this issue. Any future changes to the spec will automatically sync to this issue." || echo "Failed to add comment"
                  else
                    echo "‚ùå Failed to create issue for $file"
                  fi
                else
                  echo "‚ùå Could not extract title from $file"
                fi
              else
                echo "‚ÑπÔ∏è  $file already has issue #$existing_issue"
              fi
            fi
          done

      - name: Push updated spec files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if git diff --staged --quiet; then
            echo "No changes to push"
          else
            git push || echo "Failed to push changes"
          fi